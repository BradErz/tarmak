{{/* vim: set ft=tf: */}}

resource "aws_iam_role" "{{.TFName}}" {
  name               = "kubernetes.${data.template_file.stack_name.rendered}.{{.TFName}}"
  path               = "/"
  assume_role_policy = "${file("${path.module}/templates/role.json")}"
}

# TODO: test which policies should be attached

resource "aws_iam_instance_profile" "{{.TFName}}" {
  name = "kubernetes.${data.template_file.stack_name.rendered}.{{.TFName}}"
  role = "${aws_iam_role.{{.TFName}}.name}"
}

resource "aws_iam_role_policy_attachment" "{{.TFName}}_ec2_full" {
  role       = "${aws_iam_role.{{.TFName}}.name}"
  policy_arn = "${aws_iam_policy.ec2_full.arn}"
}

resource "aws_iam_role_policy_attachment" "{{.TFName}}_ec2_read" {
  role       = "${aws_iam_role.{{.TFName}}.name}"
  policy_arn = "${aws_iam_policy.ec2_read.arn}"
}

resource "aws_iam_role_policy_attachment" "{{.TFName}}_ec2_modify_instance_attribute" {
  role       = "${aws_iam_role.{{.TFName}}.name}"
  policy_arn = "${aws_iam_policy.ec2_modify_instance_attribute.arn}"
}

resource "aws_iam_role_policy_attachment" "{{.TFName}}_ecr_read" {
  role       = "${aws_iam_role.{{.TFName}}.name}"
  policy_arn = "${aws_iam_policy.ecr_read.arn}"
}

resource "aws_iam_role_policy_attachment" "{{.TFName}}_tarmak_bucket_read" {
  role       = "${aws_iam_role.{{.TFName}}.name}"
  policy_arn = "${aws_iam_policy.tarmak_bucket_read.arn}"
}
