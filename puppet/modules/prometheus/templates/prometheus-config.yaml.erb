apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus
  namespace: <%= @prometheus_namespace %>
data:
  prometheus.yml: |-
    rule_files:
      - "/etc/prometheus-rules/*.rules"
    global:
      scrape_interval:     15s
      evaluation_interval: 30s
      # scrape_timeout is set to the global default (10s).

    scrape_configs:

    - job_name: 'etcd_node_exporter'
      static_configs:
        - targets:
          <%- @etcd_cluster.each do |etcd| -%>
          - <%= etcd %>:9100
          <%- end -%>

    - job_name: 'etcd_k8s'
      metrics_path: /probe
      params:
        module: [k8s_proxy]
      static_configs:
        - targets:
          <%- @etcd_cluster.each do |etcd| -%>
          - <%= etcd %>:9115
          <%- end -%>
      relabel_configs:
        - source_labels: []
          regex: (.*)
          target_label: __param_target
          replacement: https://127.0.0.1:<%= @etcd_k8s_port %>/metrics

    - job_name: 'events_k8s'
      metrics_path: /probe
      params:
        module: [events_proxy]
      static_configs:
        - targets:
          <%- @etcd_cluster.each do |etcd| -%>
          - <%= etcd %>:9115
          <%- end -%>
      relabel_configs:
        - source_labels: []
          regex: (.*)
          target_label: __param_target
          replacement: https://127.0.0.1:<%= @etcd_events_port %>/metrics

    - job_name: 'overlay_k8s'
      metrics_path: /probe
      params:
        module: [overlay_proxy]
      static_configs:
        - targets:
          <%- @etcd_cluster.each do |etcd| -%>
          - <%= etcd %>:9115
          <%- end -%>
      relabel_configs:
        - source_labels: []
          regex: (.*)
          target_label: __param_target
          replacement: https://127.0.0.1:<%= @etcd_overlay_port %>/metrics


    - job_name: 'kubernetes-apiservers'
      kubernetes_sd_configs:
      - role: endpoints
        #api_server: 'https://kubernetes:6443'

      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        #insecure_skip_verify: true
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

    #- job_name: 'kubernetes-apiserver-node-exporter'

    #  kubernetes_sd_configs:
    #  - role: service

    #  relabel_configs:
    #  - action: labelmap
    #    regex: __meta_kubernetes_node_label_(.+)
    #  - source_labels: [__meta_kubernetes_role]
    #    action: replace
    #    target_label: kubernetes_role
    #  - source_labels: [__address__]
    #    regex: '(.*):443'
    #    replacement: '${1}:9100'
    #    target_label: __address__
    #  - source_labels: [__meta_kubernetes_node_label_kubernetes_io_hostname]
    #    target_label: __instance__
    #  # set "name" value to "job"
    #  - source_labels: [job]
    #    regex: 'kubernetes-(.*)'
    #    replacement: '${1}'
    #    target_label: name

    - job_name: 'kubernetes-nodes'

      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      kubernetes_sd_configs:
      - role: node

      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)

    # Scrape config for service endpoints.
    #
    # The relabeling allows the actual service scrape endpoint to be configured
    # via the following annotations:
    #
    # * `prometheus.io/scrape`: Only scrape services that have a value of `true`
    # * `prometheus.io/scheme`: If the metrics endpoint is secured then you will need
    # to set this to `https` & most likely set the `tls_config` of the scrape config.
    # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.
    # * `prometheus.io/port`: If the metrics are exposed on a different port to the
    # service then set this appropriately.
    - job_name: 'kubernetes-service-endpoints'

      kubernetes_sd_configs:
      - role: endpoints

      relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        target_label: __address__
        regex: (.+)(?::\d+);(\d+)
        replacement: $1:$2
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: kubernetes_name

    - job_name: 'kubernetes-node-exporter'

      kubernetes_sd_configs:
      - role: node

      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - source_labels: [__meta_kubernetes_role]
        action: replace
        target_label: kubernetes_role
      - source_labels: [__address__]
        regex: '(.*):10250'
        replacement: '${1}:9100'
        target_label: __address__
      - source_labels: [__meta_kubernetes_node_label_kubernetes_io_hostname]
        target_label: __instance__
      # set "name" value to "job"
      - source_labels: [job]
        regex: 'kubernetes-(.*)'
        replacement: '${1}'
        target_label: name

    # Example scrape config for probing services via the Blackbox Exporter.
    #
    # The relabeling allows the actual service scrape endpoint to be configured
    # via the following annotations:
    #
    # * `prometheus.io/probe`: Only probe services that have a value of `true`
    - job_name: 'kubernetes-services'

      metrics_path: /probe
      params:
        module: [http_2xx]

      kubernetes_sd_configs:
      - role: service

      relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]
        action: keep
        regex: true
      - source_labels: [__address__]
        target_label: __param_target
      - target_label: __address__
        replacement: blackbox
      - source_labels: [__param_target]
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_service_namespace]
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        target_label: kubernetes_name

    # Example scrape config for pods
    #
    # The relabeling allows the actual pod scrape endpoint to be configured via the
    # following annotations:
    #
    # * `prometheus.io/scrape`: Only scrape pods that have a value of `true`
    # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.
    # * `prometheus.io/port`: Scrape the pod on the indicated port instead of the default of `9102`.
    - job_name: 'kubernetes-pods'

      kubernetes_sd_configs:
      - role: pod

      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: (.+):(?:\d+);(\d+)
        replacement: ${1}:${2}
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name
